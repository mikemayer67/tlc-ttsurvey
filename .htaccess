# One of the key factors in the configuration of this .htaccess file is to prevent
#   malicient agents from probing its directory/file structure.  It does this through
#   a couple means:
#
#   - requests for directory listings are denied
#
#   - Both 404 (missing resource) and 403 (forbidden resource) errors are intercepted
#     and the redirected to the same 405.php script.  This prevents the agent from
#     being able to discern between non-existent resources and resources which exist
#     but are being hidden.
#
#   - To furthern obfuscate things, any URI that doesn't conform to the web app's API
#     will be processed through the same 405.php script.
#
#   - In both cases, the 405.php script will return with an HTTP status code of 
#     405 (method not allowed), indicating an invalid invocation of the app's API.

# Deny listing of directory contents
Options All -Indexes

# A secondary factor in the configuration of this .htaccess file is to allow
#   for this app to be installed either in the root directory of a website 
#   OR in a subdirectory named tls-ttsurvey somewhere within the website's
#   file structure.

# I couldn't figure out how to make the tlc-ttsurvey version work without
#    the use of an environment variable.  If anyone would like to help
#    me figure out how to setup and use a regex capture in the If directive,
#    I would welcome the input.
<If "%{REQUEST_URI} =~ /tlc-ttsurvey/">
  SetEnvIf REQUEST_URI "^((.*/)?tlc-ttsurvey/)" BASE_URI=$0
  ErrorDocument 403 /%{ENV:BASE_URI}405.php
  ErrorDocument 404 /%{ENV:BASE_URI}405.php
</If>
# Case where web app is in the host's root folder
<Else>
  ErrorDocument 403 /405.php
  ErrorDocument 404 /405.php
</Else>


# The goal of all of these rewrites is to funnel all URIs consistent
#   with the app's API through the tt.php script
<IfModule mod_rewrite.c>
RewriteEngine On
# If the request URI (everything after the host URL) is simply / or if it
#   ends with /tlc-ttsurvey/, simply redirect to the app's tt.php
RewriteCond %{REQUEST_URI} (^|.*/tlc-ttsurvey)(/tt)/?$
RewriteRule (.*) %1/tt.php [L]
# If the request URI is already /tt.php, /405.php, /505.php or if it
#   contains /tlc-ttsurvey/ followed by one of these, no redirect is necessary
RewriteCond %{REQUEST_URI} (^|.*/tlc-ttsurvey)/tt.php$ [OR]
RewriteCond %{REQUEST_URI} (^|.*/tlc-ttsurvey)/405.php$
RewriteCond %{REQUEST_URI} (^|.*/tlc-ttsurvey)/500.php$
RewriteRule (.*) - [L]
# If the request URI indicates a non-existent file OR an existing directory
#   on the server and includes /tlc-ttsurvey/ recirect to the app's tt.php
#   and append everything after /tlc-ttsurvey/ in the URI to the redirection URI
#   via the "action" query parameter
RewriteCond %{REQUEST_FILENAME} !-f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteCond %{REQUEST_URI} (.*/tlc-ttsurvey/)(.*)
RewriteRule (.*) %1tt.php?action=%2 [L]
# If the request URI indicates a non-existent file OR an existing directory
#   on the server and that does not include /tlc-ttsurvey/ recirect to the 
#   app's tt.php and append the entire request URI to the redirection URI
#   via the "action" query parameter
RewriteCond %{REQUEST_FILENAME} !-f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule (.*) /tt.php?action=$1 [L]
</IfModule>

# At this point, any request URI that points to a file that exists on the 
#   server will not have been redirected.  (This includes tt.php, 405.php,
#   ant 500.php, for which the rewrite rule was "don't rewrite".)  We will
#   handle these via Allow/Deny in a sequence of FilesMatch directives

# Disallow access to all dot files
<FilesMatch "^\.">
  Deny from all
</FilesMatch>

# Disallow access to all vim backup files
<FilesMatch "~$">
  Deny from all
</FilesMatch>

# Disallow access to all php, sql, html, and htm files (but see below)
<FilesMatch "\.(php|sql|htm|html)$">
  Order deny,allow
  Deny from all
</FilesMatch>

# But, DO allow access to tt.php, 405.php, and 500.php scripts
<FilesMatch '(tt|405|500).php$'>
  Order deny,allow
  Allow from all
</FilesMatch>

